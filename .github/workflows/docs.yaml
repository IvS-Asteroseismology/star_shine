name: Generate Docs in /docs Folder

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Poetry
        uses: snok/install-poetry@v1

      - name: Add pdoc to Poetry dev dependencies
        run: |
          poetry add --group dev pdoc

      # Cache Poetry dependencies and virtual environment to speed up builds
      - name: Cache Poetry dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pypoetry
            ~/.virtualenvs
          key: poetry-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            poetry-${{ runner.os }}-${{ matrix.python-version }}-

      # Report whether the cache was hit or missed
      - name: Report cache usage
        run: |
          if [ "${{ steps.cache.outputs.cache-hit }}" = "true" ]; then
            echo "Poetry cache was HIT."
          else
            echo "Poetry cache was MISSED. Dependencies will be freshly installed."
          fi

      - name: Install dependencies with Poetry
        run: |
          poetry install

      - name: Generate docs with pdoc into /docs
        run: |
          poetry run pdoc star_shine !star_shine.gui -o docs

      - name: Commit and push updated docs
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add docs/
          git diff --quiet && git diff --staged --quiet || git commit -m "Update docs [skip ci]"
          git push
